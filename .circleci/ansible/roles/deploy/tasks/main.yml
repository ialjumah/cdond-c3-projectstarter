---
- name: Creates directory n
  file:
    path: ~/node_modules
    state: directory

- name: Creates directory d
  file:
    path: ~/dist
    state: directory

- name: Unarchive Backend
  unarchive:
    src: dist.tar.gz
    dest: /home/ubuntu/dist/

- name: Copy and unarchive node_modules
  unarchive:
    src: node_modules.tar.gz
    dest: /home/ubuntu/node_modules/

- name: "start app"
  shell: |       
      pm2 start npm -f ./main.js -- run start
  args: 
    chdir: /home/ubuntu/dist/

- name: "List processes"
  shell: |      
      pm2 list
  register: pm2_result 

- name: "Print in the debug console"
  debug:
    var: pm2_result.stdout_lines

  environment:
    ENVIRONMENT: production
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    TYPEORM_MIGRATIONS_DIR: "./migrations"
    TYPEORM_MIGRATIONS: "./migrations/*.js"
    TYPEORM_ENTITIES: "./modules/domain/**/*.entity{.ts,.js}"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"



# # - name: "upgrade packages."
# #   become: true
# #   apt:
# #     upgrade: "yes"
# # - name: "install dependencies."
# #   become: true
# #   apt:
# #     name: ["nodejs", "npm"]
# #     update_cache: yes

# - name: "Creates backend app directory"
#   become: yes
#   file:
#     path: ~/backend_app
#     state: directory

# - name: "checking directory path"
#   become: yes
#   shell: |
#     cd ~/backend_app
#     pwd 
#     ls

# - name: "Copy compiled backend app"
#   become: yes
#   copy:
#     src: dist.zip
#     dest: "~/backend_app/dist.zip"

# - name: "Unzip backend files to correct directory"
#   become: yes
#   shell: |
#     cd ~/backend_app
#     unzip dist.zip
#     rm -rf dist.zip

# - name: "Install dependencies for project"
#   become: yes
#   shell: |
#     cd ~/backend_app
#     npm install



# # - name: "copy backend file"
# #   become: true
# #   copy:
# #     src: /root/project/backend
# #     dest: /root
# #     force: no

    
# # - name: "install npm packages"
# #   become: true
# #   command: npm install --force
# #   args:
# #     chdir: /root/backend

# # - name: "compile npm packages"
# #   become: true
# #   command: npm run build
# #   args:
# #     chdir: /root/backend

# - name: "Executing node"
#   become: yes
#   shell: |
#     cd ~/backend_app
#     pm2 start main.js
#   register: execute_node

# - name: list pm2 processes
#   become: yes
#   shell: pm2 list

# - name: print message
#   debug:
#     msg: "{{ execute_node.stdout_lines }}"

# - name: "Configure pm2 to start as service"
#   become: yes
#   shell: |
#     env PATH=$PATH:/usr/local/bin pm2 startup -u ubuntu



# # - name: "start server"
# #   become: true
# #   command: pm2 start npm -- run start
# #   args:
# #     chdir: /root/backend/dist